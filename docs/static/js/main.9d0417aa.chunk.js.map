{"version":3,"sources":["components/Buttons.js","components/User.js","components/UsersList.js","components/SearchBar.js","components/Loading/Loading.js","components/AboutUser/AboutUser.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","style","classList","text","action","type","className","title","onClick","User","state","isEditorOpen","login","nodeId","handleOnLoginChange","bind","handleOnNodeIdChange","handleOnCancel","value","this","setState","href","profileUrl","target","rel","src","avatarUrl","alt","onLoginChange","onNodeIdChange","InfoDisplay","onSave","onSeeMore","onDelete","React","Component","InfoEditor","handleLoginChange","handleNodeIdChange","event","onChange","UsersList","users","map","user","key","id","avatar_url","html_url","node_id","find","_user","SearchBar","aria-hidden","placeholder","aria-label","onSearch","Loading","AboutUser","data","isLoading","window","client","getUserProfile","res","AboutUserContent","onBack","name","location","followers","following","public_repos","public_gists","updated_at","slice","AppContent","aboutUserPage","isOpen","onCloseAboutUserPage","App","render","handleSearch","filteredData","handleSeeMore","handleSave","handleDelete","getUsers","filter","includes","NodeId","index","setUser","newData","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d0417aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Button (props) {\r\n    let style = {classList: '', text: ''}\r\n    switch (props.action) {\r\n        case 'SEE_MORE' :\r\n            style = {classList: 'btn-success', text: 'See moore'};\r\n            break;\r\n\r\n        case 'DELETE' :\r\n            style = {classList: 'btn-danger', text: 'Delete'};\r\n            break;\r\n\r\n        case 'EDIT' :\r\n            style = {classList: 'btn-warning', text: 'Edit'};\r\n            break;\r\n\r\n        case 'CANCEL' :\r\n            style = {classList: 'btn-dark', text: 'Cancel'};\r\n            break;\r\n\r\n        case 'SAVE' :\r\n            style = {classList: 'btn-success', text: 'Save'};\r\n            break;\r\n    }\r\n\r\n    return <button\r\n                type=\"button\"\r\n                className={`btn btn-action btn-success ${style.classList}`} \r\n                title={style.text} \r\n                onClick={props.onClick}>\r\n            {style.text}</button>;\r\n}","import React from 'react';\r\nimport Button from './Buttons.js';\r\n\r\nexport default class User extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditorOpen: false,\r\n            login: props.login,\r\n            nodeId: props.nodeId\r\n        }\r\n\r\n        this.handleOnLoginChange = this.handleOnLoginChange.bind(this);\r\n        this.handleOnNodeIdChange = this.handleOnNodeIdChange.bind(this);\r\n        this.handleOnCancel = this.handleOnCancel.bind(this);\r\n    }\r\n\r\n    handleOnLoginChange(value) {\r\n        this.setState({login: value});\r\n    }\r\n\r\n    handleOnNodeIdChange(value) {\r\n        this.setState({nodeId: value});\r\n    }\r\n\r\n    handleOnCancel() {\r\n        this.setState({\r\n            isEditorOpen: false,\r\n            login: this.props.login,\r\n            nodeId: this.props.nodeId\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const {isEditorOpen, login, nodeId} = this.state;\r\n        return (\r\n            <div className=\"card mb-3\">\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-md-4\">\r\n                        <a href={this.props.profileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <img src={this.props.avatarUrl} className=\"card-img\" alt=\"user avatar\"></img>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"row-75 card-body\">\r\n                            {!isEditorOpen\r\n                            ?<InfoDisplay\r\n                                profileUrl = {this.props.profileUrl}\r\n                                login = {this.props.login}\r\n                                nodeId = {this.props.nodeId}\r\n                                />                \r\n                            :<InfoEditor\r\n                                login = {this.props.login}\r\n                                nodeId = {this.props.nodeId}\r\n                                onLoginChange = {this.handleOnLoginChange}\r\n                                onNodeIdChange = {this.handleOnNodeIdChange}\r\n                            />}                            \r\n                        </div>\r\n                        <div className=\"row-25 button-bar\">          \r\n                            {!isEditorOpen\r\n                            ?<>\r\n                                <Button\r\n                                    action = \"SEE_MORE\"\r\n                                    onClick = {this.props.onSeeMore}\r\n                                />\r\n                                <Button \r\n                                    action = \"EDIT\"\r\n                                    onClick = {() => { this.setState({isEditorOpen: true}); }}\r\n                                />\r\n                                <Button\r\n                                    action = \"DELETE\"\r\n                                    onClick = {this.props.onDelete}\r\n                                />\r\n                            </>\r\n                            :<>\r\n                                <Button \r\n                                    action = \"CANCEL\"\r\n                                    onClick = {() => { this.handleOnCancel(); }}\r\n                                />\r\n                                <Button \r\n                                    action = \"SAVE\"\r\n                                    onClick = {() => {\r\n                                        this.setState({isEditorOpen: false});\r\n                                        this.props.onSave(login, nodeId)\r\n                                    }}\r\n                                />\r\n                            </>}\r\n                        </div>                        \r\n                    </div>    \r\n                </div>\r\n            </div>\r\n        );  \r\n    }  \r\n}\r\n\r\nclass InfoEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            login: props.login,\r\n            nodeId: props.nodeId\r\n        }\r\n\r\n        this.handleLoginChange = this.handleLoginChange.bind(this);\r\n        this.handleNodeIdChange = this.handleNodeIdChange.bind(this);\r\n    }\r\n\r\n    handleLoginChange(event) {\r\n        this.setState({login: event.target.value});\r\n        this.props.onLoginChange(event.target.value);\r\n    }\r\n\r\n    handleNodeIdChange(event) {\r\n        this.setState({nodeId: event.target.value});\r\n        this.props.onNodeIdChange(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        const {login, nodeId} = this.state;\r\n\r\n        return(\r\n            <div className='user-info-display'>\r\n                <a href={this.props.profileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <h5 className=\"card-title\">Login:<span> </span>\r\n                        <input type=\"text\" onChange={this.handleLoginChange} value={login}></input>\r\n                    </h5>                    \r\n                </a>   \r\n                <span className=\"text-muted\">Node Id:<span> </span>\r\n                    <input type=\"text\" onChange={this.handleNodeIdChange} value={nodeId}></input>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction InfoDisplay(props) {\r\n    return(\r\n        <div className='user-info-display'>\r\n            <a className=\"text-body\" href={props.profileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h5 className=\"card-title\">Login: {props.login}</h5>\r\n            </a>   \r\n            <span className=\"text-muted\">Node Id: {props.nodeId}</span>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport User from './User.js'\r\n\r\nexport default function UsersList(props) {\r\n    return (\r\n        <div className=\"User-list app-body bg-light\">\r\n            {props.users.map((user) => \r\n                <User \r\n                    key = {user.id} \r\n                    avatarUrl = {user.avatar_url}\r\n                    profileUrl = {user.html_url}\r\n                    login = {user.login}\r\n                    nodeId = {user.node_id}\r\n                    onSeeMore = {() => {\r\n                        props.onSeeMore(props.users.find((_user) => _user.id === user.id).login);\r\n                    }}\r\n                    onSave = {(login, nodeId) => {\r\n                        props.onSave(login, nodeId, user.id);\r\n                    }}\r\n                    onDelete = {() => {\r\n                        props.onDelete(user.id);\r\n                    }}\r\n                />)}\r\n        </div>        \r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function SearchBar(props) {\r\n    return(\r\n        <div className=\"Searchbar bg-light fixed-top app-header\">\r\n            <div className=\"input-group md-form form-sm form-1 pl-0 search-box\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text bg-info\" id=\"basic-text1\"><i className=\"fas fa-search text-white\"\r\n                        aria-hidden=\"true\"></i></span>\r\n                </div>\r\n                <input className=\"form-control my-0 search-input\" type=\"text\" placeholder=\"Search login\"\r\n                 aria-label=\"Search login\" onChange={(event) => {props.onSearch(event.target.value)}}></input>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport './Loading.css'\r\n\r\nexport default function Loading() {\r\n    return <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n}","import React from 'react';\r\nimport './AboutUser.css'\r\nimport Loading from '../Loading/Loading.js'\r\n\r\nexport default class AboutUser extends React.Component {\r\n    state = {\r\n        data: {isLoading: true, user: null}\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.client.getUserProfile(this.props.login, (res) => {this.setState({data: {isLoading: false, user: res}})});\r\n    }\r\n   \r\n    render() {\r\n        const {data} = this.state;\r\n\r\n        return (\r\n            <div className=\"About-user\">\r\n                <AboutUserContent\r\n                    user = {data.user}\r\n                    isLoading = {data.isLoading}\r\n                    onBack = {this.props.onBack}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction AboutUserContent(props) {\r\n    const user = props.user;\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"app-header\">\r\n                <i className=\"fas fa-arrow-left back-button\" onClick={props.onBack}></i>\r\n                <div className=\"about-user-header-cap\">About User</div>\r\n            </div>\r\n                {props.isLoading\r\n                ? <Loading/>\r\n                : <div className=\"app-body about-user-body\">\r\n                    <div className=\"main-info row-container\">\r\n                        <span className=\"user-name-location\">{user.name ?? 'none'} | {user.location ?? 'none'}</span>\r\n                        <img className=\"user-image\" src={user.avatar_url} alt=\"user_avatar\"></img>\r\n                    </div>\r\n                    <div className=\"more-info \">\r\n                        <div className=\"followers-repos row-container\">\r\n                            <span className=\"more-info-text\">Followers: {user.followers} </span>\r\n                            <span className=\"more-info-text\">Following: {user.following}</span>\r\n                            <span className=\"more-info-text\">Public repos: {user.public_repos}</span>\r\n                            <span className=\"more-info-text\">Public gists: {user.public_gists}</span>\r\n                            <span className=\"more-info-text\">Last update: {user.updated_at.slice(0, 10)}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>}            \r\n        </>);\r\n}","import React from 'react';\nimport UsersList from './components/UsersList.js';\nimport SearchBar from './components/SearchBar.js';\nimport AboutUser from './components/AboutUser/AboutUser.js';\nimport Loading from './components/Loading/Loading.js';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            aboutUserPage: {isOpen: false, login: null},\n            data: {isLoading: true, users: []},\n            filteredData: []\n        }\n\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleSeeMore = this.handleSeeMore.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);        \n    }    \n\n    componentDidMount() {\n        window.client.getUsers((res) => {\n            this.setState({\n                data: {isLoading: false, users: res},\n                filteredData: res\n            });\n        });\n    }\n\n    handleSearch(text) {\n        this.setState({filteredData: this.state.data.users.filter((user) => ('' === text) ?  true : user.login.includes(text))});\n    }\n\n    handleSeeMore(login) {\n        this.setState({aboutUserPage: {isOpen: true, login}});\n    }\n\n    handleSave(login, NodeId, index) {\n        const{data, filteredData} = this.state;\n        this.setState({\n            data: {isLoading: false, users: data.users.map(setUser)},\n            filteredData: filteredData.map(setUser)\n        });\n\n        function setUser(user) {\n            if(user.id === index) {\n                user.login = login;\n                user.node_id = NodeId;\n\n                return user;\n            }\n\n            return user;\n        }\n    }\n\n    handleDelete(index) {\n        const newData = this.state.filteredData.filter((user) => user.id !== index);\n\n        this.setState({\n            data: {isLoading: false, users: newData},\n            filteredData: newData\n        });\n    }\n\n    render = () => (<>\n        {this.state.data.isLoading\n        ?<Loading/>\n        :<AppContent\n            onSearch = {this.handleSearch}\n            users = {this.state.filteredData}\n            onSeeMore = {this.handleSeeMore}\n            onSave = {this.handleSave}\n            onDelete = {this.handleDelete}\n            aboutUserPage = {this.state.aboutUserPage}\n            onCloseAboutUserPage = {() => {this.setState({aboutUserPage: {isOpen: false, login: null}})}}\n        />\n        }</>);\n}\n\nfunction AppContent(props) {\n    return (\n        <div className=\"App\">\n            {!props.aboutUserPage.isOpen\n            ? <>\n                <SearchBar\n                    onSearch = {props.onSearch}\n                />\n                <UsersList\n                    users = {props.users}\n                    onSeeMore = {props.onSeeMore}\n                    onSave = {props.onSave}\n                    onDelete = {props.onDelete}\n                />\n            </>\n            : <>\n                <AboutUser\n                    login = {props.aboutUserPage.login}\n                    onBack = {props.onCloseAboutUserPage}\n                />\n            </>}\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}